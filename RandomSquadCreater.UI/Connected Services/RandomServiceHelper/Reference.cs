//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RandomSquadCreater.UI.RandomServiceHelper {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RandomServiceHelper.IRandomSquadService")]
    public interface IRandomSquadService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/GetAllRating", ReplyAction="http://tempuri.org/IRandomSquadService/GetAllRatingResponse")]
        RandomSquadCreater.Core.Rating[] GetAllRating();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/GetAllRating", ReplyAction="http://tempuri.org/IRandomSquadService/GetAllRatingResponse")]
        System.Threading.Tasks.Task<RandomSquadCreater.Core.Rating[]> GetAllRatingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/GetAllScore", ReplyAction="http://tempuri.org/IRandomSquadService/GetAllScoreResponse")]
        RandomSquadCreater.Core.Score[] GetAllScore();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/GetAllScore", ReplyAction="http://tempuri.org/IRandomSquadService/GetAllScoreResponse")]
        System.Threading.Tasks.Task<RandomSquadCreater.Core.Score[]> GetAllScoreAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/GetAllPlayer", ReplyAction="http://tempuri.org/IRandomSquadService/GetAllPlayerResponse")]
        RandomSquadCreater.Core.Player[] GetAllPlayer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/GetAllPlayer", ReplyAction="http://tempuri.org/IRandomSquadService/GetAllPlayerResponse")]
        System.Threading.Tasks.Task<RandomSquadCreater.Core.Player[]> GetAllPlayerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/GetRating", ReplyAction="http://tempuri.org/IRandomSquadService/GetRatingResponse")]
        RandomSquadCreater.Core.Rating GetRating(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/GetRating", ReplyAction="http://tempuri.org/IRandomSquadService/GetRatingResponse")]
        System.Threading.Tasks.Task<RandomSquadCreater.Core.Rating> GetRatingAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/GetScore", ReplyAction="http://tempuri.org/IRandomSquadService/GetScoreResponse")]
        RandomSquadCreater.Core.Score GetScore(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/GetScore", ReplyAction="http://tempuri.org/IRandomSquadService/GetScoreResponse")]
        System.Threading.Tasks.Task<RandomSquadCreater.Core.Score> GetScoreAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/GetPlayer", ReplyAction="http://tempuri.org/IRandomSquadService/GetPlayerResponse")]
        RandomSquadCreater.Core.Player GetPlayer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/GetPlayer", ReplyAction="http://tempuri.org/IRandomSquadService/GetPlayerResponse")]
        System.Threading.Tasks.Task<RandomSquadCreater.Core.Player> GetPlayerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/GetPlayerByName", ReplyAction="http://tempuri.org/IRandomSquadService/GetPlayerByNameResponse")]
        RandomSquadCreater.Core.Player GetPlayerByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/GetPlayerByName", ReplyAction="http://tempuri.org/IRandomSquadService/GetPlayerByNameResponse")]
        System.Threading.Tasks.Task<RandomSquadCreater.Core.Player> GetPlayerByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/DeleteRating", ReplyAction="http://tempuri.org/IRandomSquadService/DeleteRatingResponse")]
        bool DeleteRating(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/DeleteRating", ReplyAction="http://tempuri.org/IRandomSquadService/DeleteRatingResponse")]
        System.Threading.Tasks.Task<bool> DeleteRatingAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/DeleteScore", ReplyAction="http://tempuri.org/IRandomSquadService/DeleteScoreResponse")]
        bool DeleteScore(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/DeleteScore", ReplyAction="http://tempuri.org/IRandomSquadService/DeleteScoreResponse")]
        System.Threading.Tasks.Task<bool> DeleteScoreAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/DeletePlayer", ReplyAction="http://tempuri.org/IRandomSquadService/DeletePlayerResponse")]
        bool DeletePlayer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/DeletePlayer", ReplyAction="http://tempuri.org/IRandomSquadService/DeletePlayerResponse")]
        System.Threading.Tasks.Task<bool> DeletePlayerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/UpdateRating", ReplyAction="http://tempuri.org/IRandomSquadService/UpdateRatingResponse")]
        bool UpdateRating(RandomSquadCreater.Core.Rating rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/UpdateRating", ReplyAction="http://tempuri.org/IRandomSquadService/UpdateRatingResponse")]
        System.Threading.Tasks.Task<bool> UpdateRatingAsync(RandomSquadCreater.Core.Rating rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/UpdateScore", ReplyAction="http://tempuri.org/IRandomSquadService/UpdateScoreResponse")]
        bool UpdateScore(RandomSquadCreater.Core.Score score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/UpdateScore", ReplyAction="http://tempuri.org/IRandomSquadService/UpdateScoreResponse")]
        System.Threading.Tasks.Task<bool> UpdateScoreAsync(RandomSquadCreater.Core.Score score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/UpdatePlayer", ReplyAction="http://tempuri.org/IRandomSquadService/UpdatePlayerResponse")]
        bool UpdatePlayer(RandomSquadCreater.Core.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/UpdatePlayer", ReplyAction="http://tempuri.org/IRandomSquadService/UpdatePlayerResponse")]
        System.Threading.Tasks.Task<bool> UpdatePlayerAsync(RandomSquadCreater.Core.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/AddRating", ReplyAction="http://tempuri.org/IRandomSquadService/AddRatingResponse")]
        bool AddRating(RandomSquadCreater.Core.Rating rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/AddRating", ReplyAction="http://tempuri.org/IRandomSquadService/AddRatingResponse")]
        System.Threading.Tasks.Task<bool> AddRatingAsync(RandomSquadCreater.Core.Rating rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/AddScore", ReplyAction="http://tempuri.org/IRandomSquadService/AddScoreResponse")]
        bool AddScore(RandomSquadCreater.Core.Score score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/AddScore", ReplyAction="http://tempuri.org/IRandomSquadService/AddScoreResponse")]
        System.Threading.Tasks.Task<bool> AddScoreAsync(RandomSquadCreater.Core.Score score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/AddPlayer", ReplyAction="http://tempuri.org/IRandomSquadService/AddPlayerResponse")]
        bool AddPlayer(RandomSquadCreater.Core.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/AddPlayer", ReplyAction="http://tempuri.org/IRandomSquadService/AddPlayerResponse")]
        System.Threading.Tasks.Task<bool> AddPlayerAsync(RandomSquadCreater.Core.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/Login", ReplyAction="http://tempuri.org/IRandomSquadService/LoginResponse")]
        bool Login(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/Login", ReplyAction="http://tempuri.org/IRandomSquadService/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/GetAllScoreJsonList", ReplyAction="http://tempuri.org/IRandomSquadService/GetAllScoreJsonListResponse")]
        string[] GetAllScoreJsonList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRandomSquadService/GetAllScoreJsonList", ReplyAction="http://tempuri.org/IRandomSquadService/GetAllScoreJsonListResponse")]
        System.Threading.Tasks.Task<string[]> GetAllScoreJsonListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRandomSquadServiceChannel : RandomSquadCreater.UI.RandomServiceHelper.IRandomSquadService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RandomSquadServiceClient : System.ServiceModel.ClientBase<RandomSquadCreater.UI.RandomServiceHelper.IRandomSquadService>, RandomSquadCreater.UI.RandomServiceHelper.IRandomSquadService {
        
        public RandomSquadServiceClient() {
        }
        
        public RandomSquadServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RandomSquadServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RandomSquadServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RandomSquadServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RandomSquadCreater.Core.Rating[] GetAllRating() {
            return base.Channel.GetAllRating();
        }
        
        public System.Threading.Tasks.Task<RandomSquadCreater.Core.Rating[]> GetAllRatingAsync() {
            return base.Channel.GetAllRatingAsync();
        }
        
        public RandomSquadCreater.Core.Score[] GetAllScore() {
            return base.Channel.GetAllScore();
        }
        
        public System.Threading.Tasks.Task<RandomSquadCreater.Core.Score[]> GetAllScoreAsync() {
            return base.Channel.GetAllScoreAsync();
        }
        
        public RandomSquadCreater.Core.Player[] GetAllPlayer() {
            return base.Channel.GetAllPlayer();
        }
        
        public System.Threading.Tasks.Task<RandomSquadCreater.Core.Player[]> GetAllPlayerAsync() {
            return base.Channel.GetAllPlayerAsync();
        }
        
        public RandomSquadCreater.Core.Rating GetRating(int id) {
            return base.Channel.GetRating(id);
        }
        
        public System.Threading.Tasks.Task<RandomSquadCreater.Core.Rating> GetRatingAsync(int id) {
            return base.Channel.GetRatingAsync(id);
        }
        
        public RandomSquadCreater.Core.Score GetScore(int id) {
            return base.Channel.GetScore(id);
        }
        
        public System.Threading.Tasks.Task<RandomSquadCreater.Core.Score> GetScoreAsync(int id) {
            return base.Channel.GetScoreAsync(id);
        }
        
        public RandomSquadCreater.Core.Player GetPlayer(int id) {
            return base.Channel.GetPlayer(id);
        }
        
        public System.Threading.Tasks.Task<RandomSquadCreater.Core.Player> GetPlayerAsync(int id) {
            return base.Channel.GetPlayerAsync(id);
        }
        
        public RandomSquadCreater.Core.Player GetPlayerByName(string name) {
            return base.Channel.GetPlayerByName(name);
        }
        
        public System.Threading.Tasks.Task<RandomSquadCreater.Core.Player> GetPlayerByNameAsync(string name) {
            return base.Channel.GetPlayerByNameAsync(name);
        }
        
        public bool DeleteRating(int id) {
            return base.Channel.DeleteRating(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRatingAsync(int id) {
            return base.Channel.DeleteRatingAsync(id);
        }
        
        public bool DeleteScore(int id) {
            return base.Channel.DeleteScore(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteScoreAsync(int id) {
            return base.Channel.DeleteScoreAsync(id);
        }
        
        public bool DeletePlayer(int id) {
            return base.Channel.DeletePlayer(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePlayerAsync(int id) {
            return base.Channel.DeletePlayerAsync(id);
        }
        
        public bool UpdateRating(RandomSquadCreater.Core.Rating rating) {
            return base.Channel.UpdateRating(rating);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRatingAsync(RandomSquadCreater.Core.Rating rating) {
            return base.Channel.UpdateRatingAsync(rating);
        }
        
        public bool UpdateScore(RandomSquadCreater.Core.Score score) {
            return base.Channel.UpdateScore(score);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateScoreAsync(RandomSquadCreater.Core.Score score) {
            return base.Channel.UpdateScoreAsync(score);
        }
        
        public bool UpdatePlayer(RandomSquadCreater.Core.Player player) {
            return base.Channel.UpdatePlayer(player);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePlayerAsync(RandomSquadCreater.Core.Player player) {
            return base.Channel.UpdatePlayerAsync(player);
        }
        
        public bool AddRating(RandomSquadCreater.Core.Rating rating) {
            return base.Channel.AddRating(rating);
        }
        
        public System.Threading.Tasks.Task<bool> AddRatingAsync(RandomSquadCreater.Core.Rating rating) {
            return base.Channel.AddRatingAsync(rating);
        }
        
        public bool AddScore(RandomSquadCreater.Core.Score score) {
            return base.Channel.AddScore(score);
        }
        
        public System.Threading.Tasks.Task<bool> AddScoreAsync(RandomSquadCreater.Core.Score score) {
            return base.Channel.AddScoreAsync(score);
        }
        
        public bool AddPlayer(RandomSquadCreater.Core.Player player) {
            return base.Channel.AddPlayer(player);
        }
        
        public System.Threading.Tasks.Task<bool> AddPlayerAsync(RandomSquadCreater.Core.Player player) {
            return base.Channel.AddPlayerAsync(player);
        }
        
        public bool Login(string userName, string password) {
            return base.Channel.Login(userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string userName, string password) {
            return base.Channel.LoginAsync(userName, password);
        }
        
        public string[] GetAllScoreJsonList() {
            return base.Channel.GetAllScoreJsonList();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllScoreJsonListAsync() {
            return base.Channel.GetAllScoreJsonListAsync();
        }
    }
}
